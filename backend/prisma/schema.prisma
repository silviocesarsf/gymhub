generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "mysql"
    url      = env("DATABASE_URL")
}

model users {
    id                        Int                         @id @default(autoincrement())
    name                      String                      @db.VarChar(155)
    email                     String                      @unique @db.VarChar(100)
    password_hash             String?                     @db.VarChar(255)
    created_at                DateTime                    @default(now())
    updated_at                DateTime?
    verify_tokens             verify_tokens[]
    user_details              user_details?
    user_goals                user_goals[]
    user_exercise_preferences user_exercise_preferences[]
}

model verify_tokens {
    id         Int       @id @default(autoincrement())
    user_id    Int
    token      String    @db.VarChar(255)
    expires_at DateTime?
    used_at    DateTime?
    users      users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model user_details {
    id             Int           @id @default(autoincrement())
    user_id        Int           @unique
    weight         Decimal?      @db.Decimal(5, 2)
    height         Decimal?      @db.Decimal(5, 2)
    gender         Gender
    birth_date     DateTime      @db.Date
    activity_level ActivityLevel
    users          users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model user_goals {
    id        Int      @id @default(autoincrement())
    user_id   Int
    goal_type GoalType
    users     users    @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model exercise_preferences {
    id                        Int                         @id @default(autoincrement())
    name                      String                      @unique @db.VarChar(255)
    user_exercise_preferences user_exercise_preferences[]
}

model user_exercise_preferences {
    user_id                Int
    exercise_preference_id Int
    users                  users                @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: Cascade)
    exercise_preferences   exercise_preferences @relation(fields: [exercise_preference_id], references: [id], onDelete: Cascade, onUpdate: Cascade)

    @@id([user_id, exercise_preference_id])
}

enum Gender {
    man
    woman
    i_prefer_not_to_say
}

enum ActivityLevel {
    sedentary
    slightly_active
    moderately_active
    very_active
}

enum GoalType {
    lose_weight
    build_muscle
    improve_resistance
    stay_healthy
    increase_flexibility
}
